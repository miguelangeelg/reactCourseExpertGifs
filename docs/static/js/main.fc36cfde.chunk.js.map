{"version":3,"sources":["components/Addcategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","App.js","index.js"],"names":["Addcategory","setCategories","categories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","type","value","onChange","target","placeholder","getGifts","category","a","url","fetch","response","json","data","map","img","id","title","images","downsized_medium","gifs","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","App","ReactDOM","render","document","getElementById"],"mappings":"kNAEaA,EAAc,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,cAAeC,EAAgB,EAAhBA,WAExC,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACwB,KAAtBJ,EAAWK,SAGfR,EAAc,CAACG,GAAF,mBAAiBF,KAC9BG,EAAc,MAId,SACI,uBACIK,KAAK,OACLC,MAAOP,EACPQ,SAAU,SAAAL,GAAC,OAAIF,EAAcE,EAAEM,OAAOF,QACtCG,YAAY,yB,8BCrBfC,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACJ,mCACC,uCACXC,EAHc,UAEH,uCAFG,cAGSF,EAHT,6BACJ,oCADI,SAIGG,MAAMD,GAJT,cAIdE,EAJc,gBAKGA,EAASC,OALZ,uBAKZC,EALY,EAKZA,KALY,UAMDA,EAAKC,KAAI,SAAAC,GACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXR,IAAKM,EAAIG,OAAOC,iBAAiBV,QAVrB,eAMdW,EANc,yBAabA,GAba,4CAAH,sDCERC,EAAc,SAAC,GAAW,IAAVN,EAAS,EAATA,IACjBE,EAAcF,EAAdE,MAAOR,EAAOM,EAAPN,IACf,OACI,sBAAKa,UAAU,yCAAf,UACI,qBAAKC,IAAMd,EAAMe,IAAMP,IACvB,kCAAMA,EAAN,WCJCQ,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAEtB,ECDwB,SAACA,GAEzB,MAA0Bb,mBAAS,CAC/BmB,KAAK,GACLa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAWA,OANAC,qBAAU,WACRvB,EAASC,GAAUuB,MAAK,SAAAC,GAChBH,EAAS,CAACf,KAAKkB,EAAML,SAAS,SAErC,CAACnB,IAEGoB,EDZwBK,CAAazB,GAArCmB,EAAP,EAAOA,QAAcR,EAArB,EAAgBL,KAEhB,OACI,eAAC,WAAD,WACI,oBAAIS,UAAU,oCAAd,SAAkEf,GAAXA,GACtDmB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SACI,6BAEQJ,EAAOJ,KAAI,SAACC,GACR,OAAO,cAAC,EAAD,CAA0BA,IAAKA,GAAbA,EAAIC,eEQ1CiB,EAnBH,WAER,MAAoCvC,mBAAS,IAA7C,mBAAOD,EAAP,KAAmBD,EAAnB,KAEA,OACI,eAAC,WAAD,WACI,6CACA,cAAC,EAAD,CAAaA,cAAeA,EAAeC,WAAYA,IACvD,uBAGQA,EAAWqB,KAAI,SAACP,GACb,OAAQ,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,UCX7C2B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.fc36cfde.chunk.js","sourcesContent":["import React, { useState } from 'react'\n\nexport const Addcategory = ({setCategories, categories}) => {\n\n    const [inputValue, setInputValue] = useState(\"\");\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (inputValue.trim() === \"\") {\n            return;\n        }\n        setCategories([inputValue, ...categories]);\n        setInputValue(\"\");\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type=\"text\"\n                value={inputValue}\n                onChange={e => setInputValue(e.target.value)}\n                placeholder=\"Type something...\"\n            />\n        </form>\n    )\n}\n","export const getGifts = async (category) => {\n    const api_key = 'lfQWT2P0fcQXeOi3qbmek3VfPPnz55qf';\n    const endPoint = 'https://api.giphy.com/v1/gifs/search';\n    const url = `${endPoint}?q=${category}&limit=10&api_key=${api_key}`;\n    const response = await fetch(url);\n    const { data } = await response.json();\n    const gifs = await data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        }\n    });\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({img}) => {\n    const { title, url} = img;\n    return (\n        <div className=\"card animate__animated animate__fadeIn\">\n            <img src={ url } alt={ title }/>\n            <p> { title } </p>\n        </div>\n    )\n}\n","import React, {Fragment } from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\nexport const GifGrid = ({ category }) => {\n\n    const {loading, data:images} = useFetchGifs(category);\n    // const [images, setImages] = useState([]);\n    return (\n        <Fragment>\n            <h3 className=\"animate__animated animate__fadeIn\" key={category}>{category}</h3>\n            {loading && <p className=\"animate__animated animate__flash\" >Loading...</p>}\n            <div className=\"card-grid\">\n                <ol>\n                    {\n                        images.map((img) => {\n                            return <GifGridItem key={img.id} img={img} />\n                        })\n                    }\n                </ol>\n            </div>\n        </Fragment>\n    )\n}\n","import { useState } from \"react\";\nimport { useEffect } from \"react/cjs/react.development\";\nimport { getGifts } from \"../helpers/getGifs\";\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data:[],\n        loading: true\n    });\n\n    useEffect(()=> {\n      getGifts(category).then(imgs=> {\n              setState({data:imgs, loading: false})\n        });\n    }, [category]);\n\n    return state;\n}","import React, { Fragment, useState } from 'react';\nimport { Addcategory } from './components/Addcategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst App = () => {\n\n    const [categories, setCategories] = useState([ ])\n\n    return (\n        <Fragment>\n            <h2>Gift Expert</h2>\n            <Addcategory setCategories={setCategories} categories={categories}/>\n            <hr />\n\n                {\n                    categories.map((category) => {\n                       return  <GifGrid key={category} category={category} />\n                    })\n                }\n        </Fragment>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}